
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НоваяИгра();
КонецПроцедуры

&НаСервере
Процедура НоваяИгра()
	Для Инд = 1 По 9 Цикл
		Элементы["Декорация"+Инд].Картинка = Новый Картинка;
	КонецЦикла;
	Предыдущий = 0;
	НомерВарианта = НомерВарианта + 1;
	НомерХода = 0;
	Элементы.Декорация10.Картинка = Новый Картинка;
	
	ПараметрыВетки = Новый Структура;
	ПараметрыВетки.Вставить("МассивПХ", Новый Массив);
	ПараметрыВеткиСтрокой = ЗначениеВСтрокуВнутр(ПараметрыВетки);
	
	ИИНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	ПоигратьЗаИгрокаКоличествоИгр = ПоигратьЗаИгрокаКоличествоИгр + 1;
	Пока ПоигратьЗаИгрокаКоличествоИгр>0 Цикл
		Состояние("Осталось: "+ПоигратьЗаИгрокаКоличествоИгр);
		НоваяИгра();
		ПоигратьЗаИгрокаКоличествоИгр = ПоигратьЗаИгрокаКоличествоИгр - 1;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПроверитьОкончаниеРеквизиты(Знач1, Знач2, Знач3, ЭтоПользователь)
	Результат = (Знач1.Картинка.Вид <> ВидКартинки.Пустая) и (Знач1.Картинка = Знач2.Картинка) и (Знач2.Картинка = Знач3.Картинка);
	Если Результат Тогда
		Элементы.Декорация10.Картинка = Знач1.Картинка;
		
		ЯчейкаА = Справочники.Ячейки.НайтиПоКоду(Предыдущий);
		
		МенеджерЗаписи = РегистрыСведений.Связи.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ТекущаяДата();
		МенеджерЗаписи.Идентификатор = НомерВарианта;
		МенеджерЗаписи.НомерХода = НомерХода+1;
		МенеджерЗаписи.ЯчейкаА = ЯчейкаА;
		МенеджерЗаписи.ЯчейкаБ = Справочники.Ячейки.ПустаяСсылка();
		МенеджерЗаписи.Вес = 1.0;
		МенеджерЗаписи.ЭтоПользователь = ЭтоПользователь;
		МенеджерЗаписи.ЭтоПоследнийХод = Истина;
		МенеджерЗаписи.ВыигралПользователь = ЭтоПользователь;
		МенеджерЗаписи.Записать();
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗаписатьВетку(ЭтоПользователь, ЭтоВыигрыш)
	ПараметрыВетки = ЗначениеИзСтрокиВнутр(ПараметрыВеткиСтрокой);
	
	МенеджерЗаписи = РегистрыСведений.Граф.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.НачалИгрок = Ложь;
	МенеджерЗаписи.Ничья = не ЭтоВыигрыш;
	МенеджерЗаписи.ВыигралИгрок = ЭтоПользователь;
	
	Индекс = 1;
	Для Каждого СтрХодов Из ПараметрыВетки.МассивПХ Цикл
		МенеджерЗаписи["ПХ"+Индекс] = СтрХодов;
		Если Индекс <> ПараметрыВетки.МассивПХ.Количество() Тогда
			Вес = 0;
			Если ЭтоВыигрыш Тогда
				Вес = ?(ЭтоПользователь, -1, 1);
			КонецЕсли;
			МенеджерЗаписи["Вес_"+Индекс+"_"+(Индекс+1)] = Вес;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	МенеджерЗаписи.Записать();
		
КонецПроцедуры

&НаСервере
Процедура ПроверитьОкончание(ЭтоПользователь)
	
	// строки
	Результат = ПроверитьОкончаниеРеквизиты(Элементы.Декорация1, Элементы.Декорация2, Элементы.Декорация3, ЭтоПользователь);
	Результат = Результат или ПроверитьОкончаниеРеквизиты(Элементы.Декорация4, Элементы.Декорация5, Элементы.Декорация6, ЭтоПользователь);
	Результат = Результат или ПроверитьОкончаниеРеквизиты(Элементы.Декорация7, Элементы.Декорация8, Элементы.Декорация9, ЭтоПользователь);
	
	// столбцы
	Результат = Результат или ПроверитьОкончаниеРеквизиты(Элементы.Декорация1, Элементы.Декорация4, Элементы.Декорация7, ЭтоПользователь);
	Результат = Результат или ПроверитьОкончаниеРеквизиты(Элементы.Декорация2, Элементы.Декорация5, Элементы.Декорация8, ЭтоПользователь);
	Результат = Результат или ПроверитьОкончаниеРеквизиты(Элементы.Декорация3, Элементы.Декорация6, Элементы.Декорация9, ЭтоПользователь);
	
	// диагонали
	Результат = Результат или ПроверитьОкончаниеРеквизиты(Элементы.Декорация1, Элементы.Декорация5, Элементы.Декорация9, ЭтоПользователь);
	Результат = Результат или ПроверитьОкончаниеРеквизиты(Элементы.Декорация7, Элементы.Декорация5, Элементы.Декорация3, ЭтоПользователь);
	
	Если Результат Тогда
	//	Сообщить("Конец");
		ЗаписатьВетку(ЭтоПользователь, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Реквизит1Реквизит1ПриИзмененииНаСервере(Номер, ЭтоПользователь)
	НомерХода = НомерХода + 1;
	
	ЯчейкаА = Справочники.Ячейки.ПустаяСсылка();
	Если Предыдущий <> 0 Тогда
		ЯчейкаА = Справочники.Ячейки.НайтиПоКоду(Предыдущий);
	КонецЕсли;
	
	ЯчейкаБ = Справочники.Ячейки.НайтиПоКоду(Номер);
	
	МенеджерЗаписи = РегистрыСведений.Связи.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.Идентификатор = НомерВарианта;
	МенеджерЗаписи.НомерХода = НомерХода;
	МенеджерЗаписи.ЯчейкаА = ЯчейкаА;
	МенеджерЗаписи.ЯчейкаБ = ЯчейкаБ;
	МенеджерЗаписи.Вес = 1.0;
	МенеджерЗаписи.ЭтоПользователь = ЭтоПользователь;
	МенеджерЗаписи.Записать();
	
	ПараметрыВетки = ЗначениеИзСтрокиВнутр(ПараметрыВеткиСтрокой);
	ПараметрыВетки.МассивПХ.Добавить(ЯчейкаБ);
	ПараметрыВеткиСтрокой = ЗначениеВСтрокуВнутр(ПараметрыВетки);
	
	Предыдущий = Номер;
	
	ПроверитьОкончание(ЭтоПользователь);
	
	Если (не ЕстьЕщеХод()) и (Элементы.Декорация10.Картинка.Вид = ВидКартинки.Пустая) Тогда
		ЗаписатьВетку(Ложь, Ложь);
	КонецЕсли;
	
	Если ЭтоПользователь Тогда
		ИИНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЕстьЕщеХод()
	
	ПроверкаХодЕсть = Истина;
	Для Инд = 1 По 9 Цикл
		ПроверкаХодЕсть = ПроверкаХодЕсть и Элементы["Декорация"+Инд].Картинка.Вид <> ВидКартинки.Пустая;
	КонецЦикла;
	
	Возврат не ПроверкаХодЕсть;
	
КонецФункции

#Область РасчетыСтратегии
&НаСервере
Функция ИИНаСервереПолучитьСтратегияВыигрыш()
	
	Перем Выборка, Запрос, ЗначЯч, НайденХод, НомЯч;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Связи.Период КАК Период,
	|	Связи.Идентификатор КАК Идентификатор,
	|	Связи.НомерХода КАК НомерХода,
	|	Связи.ЯчейкаА КАК ЯчейкаА,
	|	Связи.ЯчейкаБ КАК ЯчейкаБ,
	|	Связи.Вес КАК Вес
	|ПОМЕСТИТЬ ВТ_Выигрышные
	|ИЗ
	|	РегистрСведений.Связи КАК Связи
	|ГДЕ
	|	Связи.ЯчейкаБ = ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Связи.НомерХода) КАК НомерХодаМакс,
	|	МИНИМУМ(Связи.НомерХода) КАК НомерХодаМин,
	|	КОЛИЧЕСТВО(Связи.ЯчейкаА) КАК КоличествоА,
	|	Связи.ЯчейкаБ.Код КАК ИмяЯчейки
	|ИЗ
	|	РегистрСведений.Связи КАК Связи
	|ГДЕ
	|	Связи.Идентификатор В
	|			(ВЫБРАТЬ
	|				ВТ_Выигрышные.Идентификатор
	|			ИЗ
	|				ВТ_Выигрышные)
	|	И Связи.ЯчейкаА.Код = &ЯчейкаА
	|	И Связи.ЯчейкаБ <> ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	//|	И (ВЫРАЗИТЬ(Связи.НомерХода / 2 КАК ЧИСЛО(2, 0))) <> Связи.НомерХода / 2
	|	И Связи.ЭтоПользователь = истина
	|
	|СГРУППИРОВАТЬ ПО
	|	Связи.ЯчейкаБ.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоА УБЫВ";
	
	Запрос.УстановитьПараметр("ЯчейкаА", Предыдущий);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НайденХод = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ИмяЯчейки = null Тогда
			Прервать;
		КонецЕсли;
		НомЯч = Выборка.ИмяЯчейки;
		ЗначЯч = Элементы["Декорация"+НомЯч].Картинка.Вид = ВидКартинки.Пустая;
		Если ЗначЯч Тогда
			НайденХод = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ?(НайденХод, НомЯч, 0);

КонецФункции

&НаСервере
Функция ИИНаСервереПолучитьСтратегияНеПроигрыш()
	
	Перем Выборка, Запрос, ЗначЯч, НайденХод, НомЯч;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Связи.ЯчейкаА.Код КАК ИмяЯчейки,
	|	КОЛИЧЕСТВО(*) КАК КоличествоОшибок
	|ИЗ
	|	РегистрСведений.Связи КАК Связи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Связи КАК СвязиПредыдущий
	|		ПО Связи.Идентификатор = СвязиПредыдущий.Идентификатор
	|			И (СвязиПредыдущий.НомерХода = &НомерХодаТекущий + 1)
	|			И (СвязиПредыдущий.ЯчейкаБ <> ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка))
	|			И (СвязиПредыдущий.ЯчейкаА.Код = &ЯчейкаА)
	|ГДЕ
	|	Связи.НомерХода = &НомерХодаТекущий + 2
	|	И Связи.ЯчейкаБ = ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Связи.ЯчейкаА
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоОшибок УБЫВ";
	
	Запрос.УстановитьПараметр("НомерХодаТекущий", НомерХода+1);
	Запрос.УстановитьПараметр("ЯчейкаА", Предыдущий);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НайденХод = Ложь;
	Пока Выборка.Следующий() Цикл
		НомЯч = Выборка.ИмяЯчейки;
		ЗначЯч = Элементы["Декорация"+НомЯч].Картинка.Вид = ВидКартинки.Пустая;
		Если ЗначЯч Тогда
			НайденХод = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ?(НайденХод, НомЯч, 0);

КонецФункции

&НаСервере
Функция ИИНаСервереПолучитьСтратегияРандом()
	
	Перем Гсч, ЗначЯч, НомЯч;
	
	Гсч = новый ГенераторСлучайныхЧисел;
	ЗначЯч = Истина;
	Пока ЗначЯч и ЕстьЕщеХод() Цикл
		НомЯч = Гсч.СлучайноеЧисло(1, 9);
		ЗначЯч = Элементы["Декорация"+НомЯч].Картинка.Вид <> ВидКартинки.Пустая;
	КонецЦикла;
	Возврат НомЯч;

КонецФункции

&НаСервере
Функция ИИНаСервереПолучитьСтратегияДерево()
	
	Если НомерХода = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос;

	Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗаписей,
	|";
	Средние = "
	|	СРЕДНЕЕ((Граф.Вес_1_2+Граф.Вес_2_3+Граф.Вес_3_4+Граф.Вес_4_5+Граф.Вес_5_6+Граф.Вес_6_7+Граф.Вес_7_8+Граф.Вес_8_9)/8) как Вес_Средний,
	|	СРЕДНЕЕ(Граф.Вес_1_2) КАК Вес_1_2,
	|	СРЕДНЕЕ(Граф.Вес_2_3) КАК Вес_2_3,
	|	СРЕДНЕЕ(Граф.Вес_3_4) КАК Вес_3_4,
	|	СРЕДНЕЕ(Граф.Вес_4_5) КАК Вес_4_5,
	|	СРЕДНЕЕ(Граф.Вес_5_6) КАК Вес_5_6,
	|	СРЕДНЕЕ(Граф.Вес_6_7) КАК Вес_6_7,
	|	СРЕДНЕЕ(Граф.Вес_7_8) КАК Вес_7_8,
	|	СРЕДНЕЕ(Граф.Вес_8_9) КАК Вес_8_9
	|ИЗ
	|	РегистрСведений.Граф КАК Граф
	|";
	Условия = "
	|ГДЕ
	|	Истина
	|";
	Группировки = "";
	Упорядочивание = "
	|УПОРЯДОЧИТЬ ПО
	|	Вес_Средний УБЫВ";
	
	
	ПараметрыВетки = ЗначениеИзСтрокиВнутр(ПараметрыВеткиСтрокой);
	
	Индекс = 1;
	Для Каждого СтрХодов Из ПараметрыВетки.МассивПХ Цикл
		Если Индекс > НомерХода Тогда
			Прервать;
		КонецЕсли;
		
		Текст = Текст + "
		|	Граф.ПХ"+Индекс+".Код КАК ПХ"+Индекс+",";
		Условия = Условия + "
		|	И Граф.ПХ"+Индекс+".Код = "+СтрХодов.Код+"";
		Если Группировки = "" Тогда
			Группировки = Группировки + "
			|СГРУППИРОВАТЬ ПО
			|	Граф.ПХ"+Индекс+".Код";
		Иначе
			Группировки = Группировки + "
			|	,Граф.ПХ"+Индекс+".Код";
		КонецЕсли;
		
		
		Индекс = Индекс + 1;
	КонецЦикла;
	
	// добавим следующий ход
	Текст = Текст + "
	|	Граф.ПХ"+Индекс+".Код КАК ПХ"+Индекс+",";
	Если Группировки = "" Тогда
		Группировки = Группировки + "
		|СГРУППИРОВАТЬ ПО
		|	Граф.ПХ"+Индекс+".Код";
	Иначе
		Группировки = Группировки + "
		|	,Граф.ПХ"+Индекс+".Код";
	КонецЕсли;
	
	Запрос.Текст = Текст + Средние + Условия + Группировки + Упорядочивание;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Инд = 0 По 8 Цикл
 		Элементы["Декорация"+(20+Инд)].ЦветФона = WebЦвета.Белый;
		Элементы["Декорация"+(20+Инд)].Заголовок = "";
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		Уровень = 256-Цел(((Выборка.Вес_Средний+1)/2)*256);
		Элементы["Декорация"+(Выборка["ПХ"+Индекс]+19)].ЦветФона = Новый Цвет(0, Уровень, 0);
		Элементы["Декорация"+(Выборка["ПХ"+Индекс]+19)].ЦветТекста = ?(Уровень > 128, WebЦвета.Черный, WebЦвета.Белый);
		Элементы["Декорация"+(Выборка["ПХ"+Индекс]+19)].Заголовок = Формат(Выборка.Вес_Средний,"ЧДЦ=3; ЧН=0");
	КонецЦикла;
	
	Выборка.Сбросить();
	
	Если Выборка.Следующий() Тогда
		Рез = ?(Выборка.Вес_Средний>0, Выборка["ПХ"+Индекс], 0);
		Возврат Рез;
	Иначе
		Возврат 0;
	КонецЕсли;
	
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ИИНаСервере()
	
	Если Элементы.Декорация10.Картинка.Вид <> ВидКартинки.Пустая Тогда
		Возврат;
	КонецЕсли;
	
	
	НомЯч = ИИНаСервереПолучитьСтратегияДерево();
	
	Если НомЯч = 0 Тогда
		НомЯч = ИИНаСервереПолучитьСтратегияНеПроигрыш();
	КонецЕсли;
	
	Если НомЯч = 0 Тогда
		НомЯч = ИИНаСервереПолучитьСтратегияВыигрыш();
	КонецЕсли;
	
	Если НомЯч = 0 Тогда
		НомЯч = ИИНаСервереПолучитьСтратегияРандом();
	КонецЕсли;

	Если ЕстьЕщеХод() Тогда
		Элементы["Декорация"+НомЯч].Картинка = БиблиотекаКартинок.Удалить;
		Реквизит1Реквизит1ПриИзмененииНаСервере(НомЯч, Ложь);
	//ИначеЕсли ПоигратьЗаИгрокаКоличествоИгр>0 Тогда
	//	НоваяИгра();
	КонецЕсли;
	
	Если ПоигратьЗаИгрока Тогда
		АвтоИгрокНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура АвтоИгрокНаСервере()
	Если Элементы.Декорация10.Картинка.Вид <> ВидКартинки.Пустая Тогда
		Возврат;
	КонецЕсли;
	
	НомЯч = ИИНаСервереПолучитьСтратегияРандом();
	
	Если ЕстьЕщеХод() Тогда
		Элементы["Декорация"+НомЯч].Картинка = БиблиотекаКартинок.СоздатьЭлементСписка;
		Реквизит1Реквизит1ПриИзмененииНаСервере(НомЯч, Истина);
	//ИначеЕсли ПоигратьЗаИгрокаКоличествоИгр>0 Тогда
	//	НоваяИгра();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИИ(Команда)
	ИИНаСервере();
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ДекорацияНажатие(Элемент)
	
	Если Элемент.Картинка.Вид <> ВидКартинки.Пустая Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Декорация10.Картинка.Вид <> ВидКартинки.Пустая Тогда
		Возврат;
	КонецЕсли;
	
	Элемент.Картинка = БиблиотекаКартинок.СоздатьЭлементСписка;
	
	Номер = Прав(Элемент.Имя, 1);
	Реквизит1Реквизит1ПриИзмененииНаСервере(Номер, Элемент.Картинка = БиблиотекаКартинок.СоздатьЭлементСписка);
	
КонецПроцедуры

#КонецОбласти










